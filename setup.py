# -*- coding: utf-8 -*-

from setuptools import setup, find_packages

deps = [
    'invoke', # task automation tool, see tasks.py for project task definitions

    # python optimization and utilities
    'cython',  # python to c optimization
    'toolz',  # functional programming support
    'recordclass',  # better than namedtuple
    'sortedcontainers',  # sorted analogs of python containers
    'appdirs',  # paths to standard directories
    'layeredconfig',  # application configuration support
    'pyyaml',  # yaml support
    'profilehooks',  # time profiling of the functions
    'ujson',  # faster json
    'cryptography',  # better security

    # REST clients
    'uritemplate',  # templates for uri and url
    'requests',  # enhanced http library
    'jira',  # JIRA client API
    'github3.py',  # Github client
    'boto',  # python client for AWS

    # various clients
    'gitpython',  # API to git repositories
    'antlr4-python3-runtime',
    # runtime to run code parser generated by antlr4 for python 3

    # number crunching
    'numpy',  # dependency from pymc
    'numexpr',  # fast numerical array computations
    'scipy',  # mathematics platform
    'pandas',  # tabular data crunching
    'feather-format', # feather file format support for pandas data frames
    'sympy',  # symbolic math
    # statsmodels # statistical models
    # pymc # Bayesian estimation
    'simpy',  # simulations

    # machine learning
    'scikit-learn',  # machine learning support
    'keras', # API for deep learning implementations such as TensorFlow
    'tensorflow', # deep learning library

    # text crunching
    'pyIsEmail',  # email validation
    'babel',
    # text localization and formatting of numbers, percents, currencies
    'python-Levenshtein',  # fast string comparison
    'fuzzywuzzy',  # fuzzy string matching with heuristics based on difflib
    'pyenchant',  # spell checking
    'spacy',
    'gensim',
    'pyLDAvis',
    'textacy',
    # nltk # language analysis, also need to install nltk data as described
    # on nltk site

    # graphics, charts, document generation
    'python-docx',  # word document manipulations
    'matplotlib',  # graphing
    'seaborn',  # enhanced graphing on top of matplotlib
    'bokeh',  # better charts
    'nxviz', # networkx graph vizualization based on matplotlib
    # xlwings # excel python scripting only win and osx
    # python-pptx # powerpoint support
    # pillow # graphics manipulation
    # tabulate # generate tables in text files from data structures like
    # pandas data frames or lists of lists

    # graph structures
    'networkx',  # support for graph based domain model
    'neo4j-driver',  # neo4j official driver

    # Jupyter and IPython support
    'jupyter',  # Jupyter notebook server
    'jupyter_contrib_nbextensions',
    'nbconvert',
    'pandas-profiling'  # pandas dataframe report generation
]

# TODO: by default should be README.rst, will .md work?
with open('README.md') as f:
    readme = f.read()

with open('LICENSE') as f:
    saapy_license = f.read()

setup(
    name='saapy',
    version='0.0.1',
    description='SAApy - System Architecture Assessment Toolset',
    long_description=readme,
    author='Andriy Shapochka',
    author_email='ashapochka@gmail.com',
    url='https://github.com/ashapochka/saapy',
    license=saapy_license,
    packages=find_packages(include=('saapy', 'saapy.*')),
    install_requires=deps
)

# TODO: enhance packaging and add to PYPI,
# ref https://github.com/pypa/sampleproject
